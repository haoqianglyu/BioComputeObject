{
  "bco_id": "http://biocomputeobject.org/BCO_000190",
  "checksum": "f421fe16fbe07bd69802b4874469b986cbc50998e2a0802534fb0c7a0f67c6d8",
  "bco_spec_version": "1.3.0",
  "provenance_domain": {
    "name": "10G Test BCO",
    "version": "1.0.2",
    "created": "2019-08-02T15:48:09.057352",
    "modified": "2019-08-09T18:58:43.528300",
    "contributors": [
      {
        "orcid": "https://orcid.org/0000-0001-6771-3011",
        "affiliation": "George Washington University",
        "contribution": [
          "createdBy"
        ],
        "name": "Haoqiang Lyu",
        "email": "hlyu35@gwu.edu"
      }
    ],
    "license": "https://spdx.org/licenses/CC-BY-4.0.html"
  },
  "usability_domain": [],
  "extension_domain": {
    "fhir_extension": [],
    "scm_extension": {
      "scm_repository": "",
      "scm_type": "git",
      "scm_commit": "",
      "scm_path": ""
    }
  },
  "description_domain": {
    "keywords": [
      "Galaxy",
      "HIVE",
      "variant calling pipeline"
    ],
    "pipeline_steps": [
      {
        "step_number": 0,
        "name": "Input dataset",
        "description": "upload fastq dataset",
        "version": "",
        "prerequisite": [],
        "input_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514801/10G_data.fastq",
            "filename": "10G Test fastq data"
          }
        ],
        "output_list": []
      },
      {
        "step_number": 1,
        "name": "FastQC",
        "description": "evaluating the quality of the raw sequence data",
        "version": "0.72+galaxy1",
        "prerequisite": [],
        "input_list": [],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514802/html_file.html",
            "filename": "html_file.html"
          }
        ]
      },
      {
        "step_number": 2,
        "name": "Map with BWA-MEM",
        "description": "map (align) the reads with the BWA tool to the human reference genome",
        "version": "0.7.17.1",
        "prerequisite": [],
        "input_list": [],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514803/bam_output.bam",
            "filename": "bam_output.bam"
          }
        ]
      },
      {
        "step_number": 3,
        "name": "SortSam",
        "description": "Sort the BAM file",
        "version": "2.18.2.1",
        "prerequisite": [],
        "input_list": [],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514804/outFile.bam",
            "filename": "outFile.bam"
          }
        ]
      },
      {
        "step_number": 4,
        "name": "BAM-to-SAM",
        "description": "Examine the alignment",
        "version": "2.0.1",
        "prerequisite": [],
        "input_list": [],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514805/output1.sam",
            "filename": "output1.sam"
          }
        ]
      },
      {
        "step_number": 5,
        "name": "IdxStats",
        "description": "Assess the alignment data",
        "version": "2.0.1",
        "prerequisite": [],
        "input_list": [],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514806/output.tabular",
            "filename": "output.tabular"
          }
        ]
      },
      {
        "step_number": 6,
        "name": "Flagstat",
        "description": "Run Flagstat",
        "version": "2.0.1",
        "prerequisite": [],
        "input_list": [
          {
            "access_time": "",
            "uri": "",
            "filename": ""
          }
        ],
        "output_list": [
          {
            "access_time": "",
            "uri": "http://example.com/data/514807/output1.txt",
            "filename": "output1.txt"
          }
        ]
      }
    ]
  },
  "execution_domain": {
    "script": [],
    "script_driver": "manual",
    "software_prerequisites": [],
    "external_data_endpoints": [],
    "environment_variables": {}
  },
  "parametric_domain": [
    {
      "param": "",
      "value": "",
      "step": ""
    }
  ],
  "io_domain": {
    "input_subdomain": [],
    "output_subdomain": []
  },
  "error_domain": {
    "empirical_error": {},
    "algorithmic_error": {}
  }
}